/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/builderManager.js":
/*!*******************************!*\
  !*** ./src/builderManager.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n * Create buildings\r\n */\r\nclass BuilderManager {\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.configManager = this.gameManager.configManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n\r\n        this.buildingMap = new Map([\r\n            [\"grave\", new BuildingWithShowElement(\r\n                new Building(10, 10, [[this.configManager.grave, this.configManager.corpseStorage], [1, 1]], this.configManager, this.eventManager),\r\n                this.pageManager, this.configManager.buildFuneralFlag, [this.pageManager.emptyRowBeforeJobFuneral, this.pageManager.jobFuneralRow, this.pageManager.inGravesRow])],\r\n            [\"scroll\", new Building(0, 10, [[this.configManager.scroll, this.configManager.knowledgeStorage], [1, this.configManager.knowledgeInScroll.quantity]],\r\n                this.configManager, this.eventManager)],\r\n            [\"granary\", new Building(50, 50, [[this.configManager.granary, this.configManager.foodStorage], [1, this.configManager.foodInGranary]], this.configManager,\r\n                this.eventManager)],\r\n            [\"pit\", new Building(50, 50, [[this.configManager.pit, this.configManager.stoneStorage, this.configManager.woodStorage], [1, this.configManager.resInPit,\r\n                this.configManager.resInPit]], this.configManager, this.eventManager)],\r\n            [\"tent\", new Building(20, 0, [[this.configManager.tent, this.configManager.populationStorage], [1, this.configManager.spaceInTent]], this.configManager, this.eventManager)],\r\n            [\"hut\", new Building(50, 20, [[this.configManager.hut, this.configManager.populationStorage], [1, this.configManager.spaceInHut]], this.configManager, this.eventManager)],\r\n            [\"campfire\", new Building(30, 10, [[this.configManager.campfire, this.configManager.scientistStorage], [1, this.configManager.spaceInCamprire]],\r\n                this.configManager, this.eventManager)],\r\n            [\"dolmen\", new Building(80, 80, [[this.configManager.dolmen, this.configManager.scientistStorage], [1, this.configManager.spaceInDolmen]], this.configManager,\r\n                this.eventManager)],\r\n            [\"music-club\", new BuildingWithShowElement(\r\n                new Building(225, 225, [[this.configManager.musicClub, this.configManager.djStorage, this.configManager.happyPeopleStorage], [1,\r\n                    this.configManager.spaceForWorkerInClub, this.configManager.spaceForPeopleInClub]], this.configManager, this.eventManager),\r\n                this.pageManager, this.configManager.djPresentFlag, [this.pageManager.emptyRowBeforHappinessRowElement, this.pageManager.happinessRowElement,\r\n                    this.pageManager.emptyRowBeforProductivityRowElement, this.pageManager.productivityRowElement, this.pageManager.emptyRowBeforeJobInClubElement, this.pageManager.jobDjRowElement])],\r\n            [\"yoga-club\", new BuildingWithShowElement(\r\n                new Building(225, 225, [[this.configManager.yogaClub, this.configManager.instructorStorage, this.configManager.healthyPeopleStorage], [1,\r\n                    this.configManager.spaceForWorkerInClub, this.configManager.spaceForPeopleInClub]], this.configManager, this.eventManager),\r\n                this.pageManager, this.configManager.instructorPresentFlag, [this.pageManager.emptyRowBeforHappinessRowElement, this.pageManager.healthRowElement,\r\n                    this.pageManager.emptyRowBeforProductivityRowElement, this.pageManager.productivityRowElement, this.pageManager.emptyRowBeforeJobInClubElement, this.pageManager.jobInstructorRowElement])],\r\n            [\"palace\", new BuildingWithShowElement(\r\n                new Building(1e3, 1e3, [[this.configManager.palace, this.configManager.dolmen, this.configManager.musicClub,\r\n                    this.configManager.yogaClub, this.configManager.scientistStorage, this.configManager.happyPeopleStorage, this.configManager.healthyPeopleStorage, this.configManager.djStorage,\r\n                    this.configManager.instructorStorage], [1, 5, 5, 5, 5 * this.configManager.spaceInDolmen, 5 * this.configManager.spaceForPeopleInClub, 5 * this.configManager.spaceForPeopleInClub,\r\n                    5, 5]], this.configManager, this.eventManager),\r\n                this.pageManager, this.configManager.palacePresentFlag, [])],\r\n            [\"barrack\", new BuildingWithShowElement(\r\n                new Building(200, 100, [[this.configManager.barrack, this.configManager.warriorStorage], [1, this.configManager.spaceInBarrack]], this.configManager,\r\n                    this.eventManager),\r\n                this.pageManager, this.configManager.barrackPresentFlag, [this.pageManager.jobWarriorRow])]\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Trying to build new building\r\n     * @param buildingType building type\r\n     * @returns true/false depends on whether building is built.\r\n     */\r\n    buildNewBuilding(buildingType) {\r\n        let result = this.buildingMap.get(buildingType).buildBuilding()\r\n        if (result) {\r\n            this.checkPalaceAchievement(buildingType);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    checkPalaceAchievement(buildingType) {\r\n        if (!this.configManager.palacePresentFlag && \"palace\" === buildingType) {\r\n            this.eventManager.addAchievement(\"Palace\");\r\n            alert(`You are amazing!!! Congratulations! You built a palace for yourself!! \\nAlso you've just killed: ${this.configManager.corpse.quantity\r\n            + this.configManager.inGraveQuantity.quantity} people. (￣▽￣)ノ ${this.configManager.userName}, Great job!!`);\r\n            this.pageManager.buildPalaceButton.prop(\"disabled\", true);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Base class for building\r\n */\r\nclass Building {\r\n    constructor(woodPrice, stonePrice, resourceToChangeAr, configManager, eventManager) {\r\n        this.woodPrice = woodPrice;\r\n        this.stonePrice = stonePrice;\r\n\r\n        this.resourceToChangeAr = resourceToChangeAr;\r\n        this.configManager = configManager;\r\n        this.eventManager = eventManager;\r\n    }\r\n\r\n    buildBuilding() {\r\n        return this.tryToBuild();\r\n    }\r\n\r\n    tryToBuild() {\r\n        let result = true;\r\n        if (this.checkEnoughResource()) {\r\n            this.configManager.wood.changeQuantity(-this.woodPrice);\r\n            this.configManager.stone.changeQuantity(-this.stonePrice);\r\n            for (let i = 0; i < this.resourceToChangeAr[0].length; i++) {\r\n                this.resourceToChangeAr[0][i].changeQuantity(this.resourceToChangeAr[1][i]);\r\n            }\r\n        } else {\r\n            this.eventManager.addEvent(\"more resources\");\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    checkEnoughResource() {\r\n        return this.configManager.wood.quantity >= this.woodPrice && this.configManager.stone.quantity >= this.stonePrice;\r\n    }\r\n}\r\n\r\n/**\r\n * Class decorator for Building\r\n * Add showing new elements on the page.\r\n */\r\nclass BuildingWithShowElement {\r\n    constructor(building, pageManager, flag, showElementAr) {\r\n        this.building = building;\r\n        this.pageManager = pageManager;\r\n        this.flag = flag;\r\n        this.showElementAr = showElementAr;\r\n    }\r\n\r\n    buildBuilding() {\r\n        let result = this.building.tryToBuild();\r\n        if (result && !this.flag) {\r\n            this.pageManager.showElement(this.showElementAr);\r\n            this.flag = true;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (BuilderManager);\n\n//# sourceURL=webpack:///./src/builderManager.js?");

/***/ }),

/***/ "./src/citizenManager.js":
/*!*******************************!*\
  !*** ./src/citizenManager.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n * Manage people\r\n */\r\nclass CitizenManager {\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.configManager = this.gameManager.configManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n    }\r\n\r\n    tryToCreateCitizen(quantity) {\r\n        if (this.checkCitizenCost(quantity) && this.checkFreeHouses(quantity)) {\r\n            this.configManager.food.changeQuantity(-this.configManager.citizenCost * quantity);\r\n            this.addCitizen(quantity);\r\n\r\n            this.setHappyPeople();\r\n            this.setHealthyPeople();\r\n        }\r\n    }\r\n\r\n    checkCitizenCost(quantity) {\r\n        let result = true;\r\n        if (this.configManager.food.quantity < this.configManager.citizenCost * quantity) {\r\n            result = false;\r\n            this.eventManager.addEvent(\"not enough food\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    checkFreeHouses(quantity) {\r\n        let result = true;\r\n        if ((this.configManager.currentPopulation.quantity + quantity) > this.configManager.populationStorage.quantity) {\r\n            result = false;\r\n            this.eventManager.addEvent(\"not enough houses\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Just add new citizen\r\n     * @param quantity - how many\r\n     */\r\n    addCitizen(quantity) {\r\n        this.configManager.currentPopulation.storage.changeQuantity(quantity);\r\n        this.configManager.currentPopulation.changeQuantity(quantity);\r\n        this.configManager.currentPopulation.storage.changeQuantity(-quantity);\r\n\r\n        this.configManager.lazybones.changeQuantity(quantity);\r\n        this.configManager.foodTotalProduction.changeQuantity(-quantity);\r\n    }\r\n\r\n    setHappyPeople() {\r\n        if (this.configManager.currentPopulation.quantity <= this.configManager.dj.quantity * this.configManager.spaceForPeopleInClub) {\r\n            this.pageManager.curHappyPeopleElement.text(this.configManager.currentPopulation.quantity);\r\n        }\r\n    }\r\n\r\n    setHealthyPeople() {\r\n        if (this.configManager.currentPopulation.quantity <= this.configManager.instructor.quantity * this.configManager.spaceForPeopleInClub) {\r\n            this.pageManager.curHealthyPeopleElement.text(this.pageManager.curPopulationElement.text());\r\n        }\r\n    }\r\n\r\n    setCitizenToWork(workType, quantity) {\r\n        let result = false;\r\n        if (this.checkOpportunityToSetCitizen(workType, quantity)) {\r\n            this.setWorker(workType, quantity);\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    checkOpportunityToSetCitizen(workType, quantity) {\r\n        let result = false;\r\n\r\n        if (quantity > 0) {\r\n            if (this.checkLazybonesPresence()) {\r\n                if (this.configManager.lazybones.quantity >= quantity) {\r\n                    // check enough buildings\r\n                    if (workType === this.configManager.scientist && this.configManager.scientist.quantity === this.configManager.scientist.storage.quantity) {\r\n                        this.eventManager.addEvent(\"more campfires\");\r\n                        return result;\r\n                    } else if (workType === this.configManager.dj && this.configManager.dj.quantity === this.configManager.dj.storage.quantity) {\r\n                        this.eventManager.addEvent(\"more music clubs\");\r\n                        return result;\r\n                    } else if (workType === this.configManager.instructor && this.configManager.instructor.quantity === this.configManager.instructor.storage.quantity) {\r\n                        this.eventManager.addEvent(\"more yoga clubs\");\r\n                        return result;\r\n                    } else if (workType === this.configManager.warrior && this.configManager.warrior.quantity === this.configManager.warriorStorage.quantity) {\r\n                        this.eventManager.addEvent(\"more barrack\");\r\n                        return result;\r\n                    }\r\n                    // for funeral\r\n                } else {\r\n                    this.eventManager.addEvent(\"1 funeral process needs 2 workers\");\r\n                    return result;\r\n                }\r\n\r\n                result = true;\r\n            }\r\n            // set worker\r\n        } else if (workType.quantity) {\r\n            result = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    checkLazybonesPresence() {\r\n        let result = true;\r\n        if (!this.configManager.lazybones.quantity) {\r\n            this.eventManager.addEvent(\"lack of lazybones\");\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setWorker(workType, quantity) {\r\n        this.configManager.lazybones.changeQuantity(-quantity);\r\n        workType.changeQuantity(quantity);\r\n\r\n        if (workType === this.configManager.farmer) {\r\n            this.configManager.foodTotalProduction.changeQuantity(this.configManager.farmerProduction * quantity);\r\n        } else if (workType === this.configManager.woodman) {\r\n            this.configManager.woodTotalProduction.changeQuantity(this.configManager.woodmanProduction * quantity);\r\n        } else if (workType === this.configManager.miner) {\r\n            this.configManager.stoneTotalProduction.changeQuantity(this.configManager.minerProduction * quantity);\r\n        } else if (workType === this.configManager.scientist) {\r\n            this.configManager.knowledgeTotalProduction.changeQuantity(this.configManager.scientistProduction * quantity);\r\n        } else if (workType === this.configManager.dj) {\r\n            let peopleAmount = this.configManager.currentPopulation.quantity;\r\n            let totalAvailableSpaceInClub = this.configManager.dj.quantity * this.configManager.spaceForPeopleInClub;\r\n            if (peopleAmount <= totalAvailableSpaceInClub) {\r\n                this.pageManager.curHappyPeopleElement.text(peopleAmount);\r\n            } else {\r\n                this.pageManager.curHappyPeopleElement.text(totalAvailableSpaceInClub);\r\n            }\r\n\r\n            if (!this.configManager.djProductivityFlag) {\r\n                this.configManager.changeAllProduction(true);\r\n                this.configManager.djProductivityFlag = true;\r\n            }\r\n        } else if (workType === this.configManager.instructor) {\r\n            let peopleAmount = this.configManager.currentPopulation.quantity;\r\n            let totalAvailableSpaceInClub = this.configManager.instructor.quantity * this.configManager.spaceForPeopleInClub;\r\n            if (peopleAmount <= totalAvailableSpaceInClub) {\r\n                this.pageManager.curHealthyPeopleElement.text(peopleAmount);\r\n            } else {\r\n                this.pageManager.curHealthyPeopleElement.text(totalAvailableSpaceInClub);\r\n            }\r\n\r\n            if (!this.configManager.instructorProductivityFlag) {\r\n                this.configManager.changeAllProduction(true);\r\n                this.configManager.instructorProductivityFlag = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO Try to refactor this part in the next time\r\n    findPersonToKill() {\r\n        if (this.configManager.currentPopulation.quantity > 0) {\r\n            let withDecrease = true;\r\n            if (this.configManager.lazybones.quantity) {\r\n                this.configManager.lazybones.changeQuantity(-1);\r\n            } else if (this.configManager.woodman.quantity) {\r\n                withDecrease = false;\r\n                this.killWoodcutter();\r\n            } else if (this.configManager.miner.quantity) {\r\n                withDecrease = false;\r\n                this.killMiner();\r\n            } else if (this.configManager.funeral.quantity) {\r\n                this.configManager.funeral.changeQuantity(-2);\r\n                this.configManager.lazybones.changeQuantity(1);\r\n            } else if (this.configManager.scientist.quantity) {\r\n                withDecrease = false;\r\n                this.killScientist();\r\n            } else if (this.configManager.dj.quantity) {\r\n                this.configManager.dj.changeQuantity(-1);\r\n                this.configManager.currentHappyPeople.changeQuantity(-(this.configManager.currentPopulation.quantity <= this.configManager.spaceForPeopleInClub ? this.configManager.currentPopulation.quantity\r\n                    : (this.configManager.spaceForPeopleInClub - 1)));\r\n                if (!this.configManager.dj.quantity) {\r\n                    this.configManager.changeAllProduction(false);\r\n                    this.configManager.djProductivityFlag = false;\r\n                }\r\n            } else if (this.configManager.instructor.quantity) {\r\n                this.configManager.instructor.changeQuantity(-1);\r\n                this.configManager.currentHealthyPeople.changeQuantity(-(this.configManager.currentPopulation.quantity <= this.configManager.spaceForPeopleInClub ? this.configManager.currentPopulation.quantity\r\n                    : (this.configManager.spaceForPeopleInClub - 1)));\r\n                if (!this.configManager.instructor.quantity) {\r\n                    this.configManager.changeAllProduction(false);\r\n                    this.configManager.instructorPresentFlag = false;\r\n                }\r\n            } else if (this.configManager.leader.quantity) {\r\n                this.configManager.leader.changeQuantity(-1);\r\n                if (!this.configManager.leader.quantity) {\r\n                    this.pageManager.hideElement([this.pageManager.tenWorkTd]);\r\n                    this.pageManager.workTableEmptyTd.attr(\"colspan\", \"5\");\r\n                    this.configManager.leaderPresentFlag = false;\r\n                }\r\n            } else if (this.configManager.warrior.quantity) {\r\n                this.configManager.warrior.changeQuantity(-1);\r\n            } else if (this.configManager.farmer.quantity) {\r\n                withDecrease = false;\r\n                this.killFarmer();\r\n            }\r\n\r\n            if (withDecrease) {\r\n                this.decreasePopulation();\r\n            }\r\n\r\n            // TODO move to event logic\r\n        } else {\r\n            this.eventManager.addEvent(\"death because of zombies\");\r\n            alert(`🧟🧟 ${this.configManager.userName} are amazing, you killed: ${this.configManager.corpse.quantity\r\n            + this.configManager.inGraveQuantity.quantity} people. I believe in you. Please, try again.`);\r\n            this.pageManager.showElement([this.pageManager.startAgainButton]);\r\n        }\r\n    }\r\n\r\n    killWoodcutter() {\r\n        this.killWorker(this.configManager.woodman, this.configManager.woodTotalProduction, this.configManager.woodmanProduction);\r\n    }\r\n\r\n    killMiner() {\r\n        this.killWorker(this.configManager.miner, this.configManager.stoneTotalProduction, this.configManager.minerProduction);\r\n    }\r\n\r\n    killFarmer() {\r\n        this.killWorker(this.configManager.farmer, this.configManager.foodTotalProduction, this.configManager.farmerProduction);\r\n    }\r\n\r\n    killScientist() {\r\n        this.killWorker(this.configManager.scientist, this.configManager.knowledgeTotalProduction, this.configManager.scientistProduction);\r\n    }\r\n\r\n    killWorker(workerType, totalProduction, curUnitProduction) {\r\n        this.decreasePopulation();\r\n        workerType.changeQuantity(-1);\r\n        totalProduction.changeQuantity(-curUnitProduction);\r\n    }\r\n\r\n    decreasePopulation() {\r\n        this.configManager.currentPopulation.changeQuantity(-1);\r\n        this.configManager.foodTotalProduction.changeQuantity(1);\r\n\r\n        if (!this.configManager.corpsePresenceFlag) {\r\n            this.pageManager.showElement([this.pageManager.corpseRow]);\r\n            this.configManager.corpsePresenceFlag = true;\r\n        }\r\n        this.configManager.corpse.changeQuantity(1);\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (CitizenManager);\n\n//# sourceURL=webpack:///./src/citizenManager.js?");

/***/ }),

/***/ "./src/configManager.js":
/*!******************************!*\
  !*** ./src/configManager.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass ConfigManager {\r\n    constructor() {\r\n        this.userName = \"\";\r\n        this.foodIncreaseStep = 0.15;\r\n        this.woodIncreaseStep = 0.125;\r\n        this.stoneIncreaseStep = 0.05;\r\n        this.knowledgeIncreaseStep = 0.025;\r\n        this.clickEfficiency = 1;\r\n        this.WINNER_REQUIREMENTS = 1e6;\r\n        // Flags\r\n        this.showPeopleTableFlag = false;\r\n        this.corpsePresenceFlag = false;\r\n        this.buildFuneralFlag = false;\r\n\r\n        this.showWorkTableFlag = false;\r\n        this.leaderPresentFlag = false;\r\n        this.djPresentFlag = false;\r\n        this.djProductivityFlag = false;\r\n        this.instructorPresentFlag = false;\r\n        this.instructorProductivityFlag = false;\r\n\r\n        this.showBuildingTableFlag = false;\r\n        this.barrackPresentFlag = false;\r\n        this.palacePresentFlag = false;\r\n        this.showTechnologyTableFlag = false;\r\n        this.productivityAchievementFlag = false;\r\n        this.starvationAchievementFlag = false;\r\n\r\n        // Building benefit\r\n        this.foodInGranary = 50;\r\n        this.resInPit = 50;\r\n        this.spaceInTent = 2;\r\n        this.spaceInHut = 5;\r\n        this.spaceInCamprire = 2;\r\n        this.spaceInDolmen = 5;\r\n        this.spaceForWorkerInClub = 1;\r\n        this.spaceForPeopleInClub = 25;\r\n        this.spaceInPalace = 5;\r\n        this.spaceInBarrack = 10;\r\n        // Technology Cost\r\n        this.agricultureCost = 30;\r\n        this.architectureCost = 30;\r\n        this.funeralCost = 30;\r\n        this.changes2Cost = 75;\r\n        this.leadershipCost = 100;\r\n        this.agriculture2Cost = 100;\r\n        this.architecture2Cost = 100;\r\n        this.stoneAgeCost = 300;\r\n        this.architecture3Cost = 250;\r\n        this.musicCost = 250;\r\n        this.sportCost = 250;\r\n        this.toolCost = 250;\r\n        this.ancientWeaponCost = 350;\r\n        this.hoeCost = 300;\r\n        this.axeCost = 300;\r\n        this.pickaxeCost = 300;\r\n        this.bothSideScrollCost = 10;\r\n        this.architecture4Cost = 900;\r\n        this.bronzeAgeCost = 3e3;\r\n    }\r\n\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n\r\n        // Resources\r\n        this.foodStorage = new Resource(100, this.pageManager.maxFoodQuantityElement, 0);\r\n        this.food = new Resource(0, this.pageManager.foodQuantityElement, 0, this.foodStorage);\r\n        this.farmerProduction = 1.2;\r\n        this.foodTotalProduction = new Resource(0, this.pageManager.foodProductionElement, 1);\r\n\r\n        this.woodStorage = new Resource(100, this.pageManager.maxWoodQuantityElement, 0);\r\n        this.wood = new Resource(0, this.pageManager.woodQuantityElement, 0, this.woodStorage);\r\n        this.woodmanProduction = 0.5;\r\n        this.woodTotalProduction = new Resource(0, this.pageManager.woodProductionElement, 1);\r\n\r\n        this.stoneStorage = new Resource(100, this.pageManager.maxStoneQuantityElement, 0);\r\n        this.stone = new Resource(0, this.pageManager.stoneQuantityElement, 0, this.stoneStorage);\r\n        this.minerProduction = 0.2;\r\n        this.stoneTotalProduction = new Resource(0, this.pageManager.stoneProductionElement, 1);\r\n\r\n        this.knowledgeStorage = new Resource(30, this.pageManager.maxKnowledgeQuantityElement, 0);\r\n        this.knowledge = new Resource(0, this.pageManager.knowledgeQuantityElement, 0, this.knowledgeStorage);\r\n        this.scientistProduction = 0.1;\r\n        this.knowledgeTotalProduction = new Resource(0, this.pageManager.knowledgeProductionElement, 1);\r\n\r\n        // People\r\n        this.citizenCost = 10;\r\n        this.populationStorage = new Resource(5, this.pageManager.maxPopulationElement, 0);\r\n        this.currentPopulation = new Resource(0, this.pageManager.curPopulationElement, 0, this.populationStorage);\r\n        this.corpse = new Resource(0, this.pageManager.corpseQuantityElement, 0);\r\n        this.corpseStorage = new Resource(0, this.pageManager.maxInGravesQuantityElement, 0);\r\n        this.inGraveQuantity = new Resource(0, this.pageManager.inGraveQuantityElement, 0, this.corpseStorage);\r\n        this.happyPeopleStorage = new Resource(0, this.pageManager.maxHappyPeopleElement, 0);\r\n        this.currentHappyPeople = new Resource(0, this.pageManager.curHappyPeopleElement, 0, this.happyPeopleStorage);\r\n        this.healthyPeopleStorage = new Resource(0, this.pageManager.maxHealthyPeopleElement, 0);\r\n        this.currentHealthyPeople = new Resource(0, this.pageManager.curHealthyPeopleElement, 0, this.healthyPeopleStorage);\r\n        this.productivity = new Resource(100, this.pageManager.productivityQuantityElement, 2);\r\n\r\n        // Work\r\n        this.lazybones = new Resource(0, this.pageManager.curLazybonesElement, 0);\r\n        this.farmer = new Resource(0, this.pageManager.farmerQuantityElement, 0);\r\n        this.woodman = new Resource(0, this.pageManager.woodmenQuantityElement, 0);\r\n        this.miner = new Resource(0, this.pageManager.minerQuantityElement, 0);\r\n        this.funeral = new Resource(0, this.pageManager.funeralQuantityElement, 0);\r\n        this.scientistStorage = new Resource(0, this.pageManager.maxScientistQuantityElement, 0);\r\n        this.scientist = new Resource(0, this.pageManager.curScientistQuantityElement, 0, this.scientistStorage);\r\n        this.djStorage = new Resource(0, this.pageManager.maxDjQuantityElement, 0);\r\n        this.dj = new Resource(0, this.pageManager.djQuantityElement, 0, this.djStorage);\r\n        this.instructorStorage = new Resource(0, this.pageManager.maxInstructorQuantityElement, 0);\r\n        this.instructor = new Resource(0, this.pageManager.instructorQuantityElement, 0, this.instructorStorage);\r\n        this.leader = new Resource(0, this.pageManager.leaderQuantityElement, 0);\r\n        this.warriorStorage = new Resource(0, this.pageManager.maxWarriorQuantityElement, 0);\r\n        this.warrior = new Resource(0, this.pageManager.warriorQuantityElement, 0, this.warriorStorage);\r\n\r\n        // Buildings\r\n        this.grave = new Resource(0, this.pageManager.graveQuantityElement, 0);\r\n        this.scroll = new Resource(0, this.pageManager.scrollQuantityElement, 0);\r\n        this.granary = new Resource(0, this.pageManager.granaryQuantityElement, 0);\r\n        this.pit = new Resource(0, this.pageManager.pitQuantityElement, 0);\r\n        this.tent = new Resource(0, this.pageManager.tentQuantityElement, 0);\r\n        this.hut = new Resource(0, this.pageManager.hutQuantityElement, 0);\r\n        this.campfire = new Resource(0, this.pageManager.campfireQuantityElement, 0);\r\n        this.dolmen = new Resource(0, this.pageManager.dolmenQuantityElement, 0);\r\n        this.musicClub = new Resource(0, this.pageManager.musicClubQuantityElement, 0);\r\n        this.yogaClub = new Resource(0, this.pageManager.yogaClubQuantityElement, 0);\r\n        this.palace = new Resource(0, this.pageManager.palaceQuantityElement, 0);\r\n        this.barrack = new Resource(0, this.pageManager.barrackQuantityElement, 0);\r\n\r\n        // Building benefit\r\n        this.knowledgeInScroll = new Resource(5, this.pageManager.buildScrollDefinition, 0);\r\n    }\r\n\r\n    changeAllProduction(increase) {\r\n        let mathSign = increase ? 1 : -1;\r\n        this.productivity.changeQuantity(mathSign * 25);\r\n        this.changeProduction(\"food\", increase);\r\n        this.changeProduction(\"wood\", increase);\r\n        this.changeProduction(\"stone\", increase);\r\n        this.changeProduction(\"knowledge\", increase);\r\n    }\r\n\r\n    // TODO Replace to resources\r\n    changeProduction(what, increase) {\r\n        let multiply = increase ? 1 : -1;\r\n        switch (what) {\r\n            case \"food\":\r\n                this.farmerProduction = Math.round(this.farmerProduction * 1000 + multiply * this.foodIncreaseStep * 1000) / 1000;\r\n                this.foodTotalProduction.changeQuantity(multiply * this.farmer.quantity * this.foodIncreaseStep);\r\n                break;\r\n            case \"wood\":\r\n                this.woodmanProduction = Math.round(this.woodmanProduction * 1000 + multiply * this.woodIncreaseStep * 1000) / 1000;\r\n                this.woodTotalProduction.changeQuantity(multiply * this.woodman.quantity * this.woodIncreaseStep);\r\n                break;\r\n            case \"stone\":\r\n                this.minerProduction = Math.round(this.minerProduction * 1000 + multiply * this.stoneIncreaseStep * 1000) / 1000;\r\n                this.stoneTotalProduction.changeQuantity(multiply * this.miner.quantity * this.stoneIncreaseStep);\r\n                break;\r\n            case \"knowledge\":\r\n                this.scientistProduction = Math.round(this.scientistProduction * 1000 + this.knowledgeIncreaseStep * 1000) / 1000;\r\n                this.knowledgeTotalProduction.changeQuantity(this.scientist.quantity * this.knowledgeIncreaseStep);\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nclass Resource {\r\n    constructor(quantity, element, toFixed, storage) {\r\n        this.quantity = quantity;\r\n        this.element = element;\r\n        this.toFixed = toFixed;\r\n        this.storage = storage;\r\n    }\r\n\r\n    changeQuantity(quantity) {\r\n        this.quantity = (this.quantity * 1e3 + quantity * 1e3) / 1e3;\r\n\r\n        if (this.storage) {\r\n            if (this.quantity > this.storage.quantity) {\r\n                this.quantity = this.storage.quantity;\r\n            } else if (this.quantity < -1) {\r\n                this.quantity = -1;\r\n            }\r\n        }\r\n\r\n        if (this.toFixed) {\r\n            this.element.text(this.quantity.toFixed(this.toFixed));\r\n        } else {\r\n            this.element.text(Math.floor(this.quantity));\r\n        }\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ConfigManager);\n\n//# sourceURL=webpack:///./src/configManager.js?");

/***/ }),

/***/ "./src/eventManager.js":
/*!*****************************!*\
  !*** ./src/eventManager.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// TODO refactoring this class\r\nclass EventManager {\r\n    constructor() {\r\n        // Msg's\r\n        this.okMsg = \"Everything is ok. Let s relax. ☕\";\r\n        this.lackLazyboneMsg = \"&#9888; Find more lazybones. 👷‍♂\";\r\n        this.starvationMsg = \"🍽️ HELP!!! We don't have enough food. :(\";\r\n        this.moreResourceMsg = \"&#9888; Collect more resources.\";\r\n        this.moreKnowledgeMsg = \"&#9888; Collect more knowledge.\";\r\n        this.moreScienceBuildingMsg = \"&#9888; Build more science buildings.\";\r\n        this.moreMusicClubsMsg = \"&#9888; Build more entertainment buildings.\";\r\n        this.moreYogaClubsMsg = \"&#9888; Build more health buildings.\";\r\n        this.moreBarrackMsg = \"&#9888; Build more barracks.\";\r\n        this.funeralProccessMoreWorkersMsg = \"👥👥 One funeral requires 2 workers.\";\r\n        this.elvesCantCutTreeMsgPart1 = \"🧝🧝 Elves can't cut trees, so sometimes they take it from the others. They said - THANK YOU. And took: \";\r\n        this.elvesCantCutTreePart2 = \" of your wood.\";\r\n        this.elvesAreDisappointed = \"🧝🧝 You don t have wood. Elves are disappointed of us.. :((\";\r\n        this.elvesLike = \"🧝🧝 Main Elf said - we like you.\";\r\n        this.nightmareMsg = \"👩‍🌾👩‍🌾  Your farmers said that they saw strange nightmares. 👾👾\";\r\n        this.strangeInTheSkiesMsg = \"👩‍🌾👩‍🌾 Your farmers said that they saw something strange in the skies. You said - ha, rich imagination\";\r\n        this.ufoKilledMsgPart1 = \"🛸 Ufo Aliens tried to improve your human beings, but it wasn't successful. Unfortunately they killed: \";\r\n        this.ufoKilledMsgPart2 = \" of your farmers. Maybe in the next time.\";\r\n        this.ufoArtifactMsgPart1 = \"🛸 Ufo gave to you a mighty artifact, but your people don't know how to apply this and they just exchanged it with more advanced civilization for: \";\r\n        this.ufoArtifactMsgPart2 = \" stones.\";\r\n        this.overturnedCorpsesMsg = \"🧑🧑 Your people said that corpses overturned during the last full moon night. You said - ha, rich imagination\";\r\n        this.foolMoonMsg = \"Your people like fool moon this night 🌘\";\r\n        this.deathBecauseOfZombie = \"🌘🧛 You people died because of too many zombies.\";\r\n        this.newAchievement = \"🙊🙈🙉 Get a new achievement.\";\r\n\r\n        // Statuses\r\n        this.successStatus = \"success\";\r\n        this.primaryStatus = \"primary\";\r\n        this.warningStatus = \"dark\";\r\n        this.dangerStatus = \"danger\";\r\n    }\r\n\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n        this.configManager = this.gameManager.configManager;\r\n        this.citizenManager = this.gameManager.citizenManager;\r\n\r\n        this.hiddenButtons = [this.pageManager.startAgainButton, this.pageManager.pauseButton];\r\n    }\r\n\r\n    addEvent(what, changes) {\r\n        // TODO think about this map...\r\n        let msgMap = new Map([\r\n            [\"ok\", [this.okMsg, this.successStatus]],\r\n            [\"starvation\", [this.starvationMsg, this.dangerStatus]],\r\n            // lack of resource\r\n            [\"not enough food\", [\"&#9888; You need more food.\", this.warningStatus]],\r\n            [\"not enough houses\", [\"&#9888; You need more houses.\", this.warningStatus]],\r\n            [\"more resources\", [this.moreResourceMsg, this.warningStatus]],\r\n            [\"more knowledge\", [this.moreKnowledgeMsg, this.warningStatus]],\r\n            // lack of building\r\n            [\"more campfires\", [this.moreScienceBuildingMsg, this.warningStatus]],\r\n            [\"more music clubs\", [this.moreMusicClubsMsg, this.warningStatus]],\r\n            [\"more yoga clubs\", [this.moreYogaClubsMsg, this.warningStatus]],\r\n            [\"more barrack\", [this.moreBarrackMsg, this.warningStatus]],\r\n            // lack of free workers\r\n            [\"lack of lazybones\", [this.lackLazyboneMsg, this.warningStatus]],\r\n            [\"1 funeral process needs 2 workers\", [this.funeralProccessMoreWorkersMsg, this.warningStatus]],\r\n            // event\r\n            // ufo\r\n            [\"ufo gave an useful artifact\", [`🛸🛸 gives a mighty artifact and your people made a new button from it.&#128526&#128526`, this.successStatus]],\r\n            [\"ufo gave an artifact\", [`${this.ufoArtifactMsgPart1} ${changes} ${this.ufoArtifactMsgPart2}`, this.successStatus]],\r\n            [\"strange in the skies\", [this.strangeInTheSkiesMsg, this.primaryStatus]],\r\n            [\"nightmare\", [this.nightmareMsg, this.primaryStatus]],\r\n            [\"ufo killed\", [`${this.ufoKilledMsgPart1} ${changes} ${this.ufoKilledMsgPart2}`, this.dangerStatus]],\r\n            // zombie\r\n            [\"fool moon\", [this.foolMoonMsg, this.primaryStatus]],\r\n            [\"overturned corpses\", [this.overturnedCorpsesMsg, this.warningStatus]],\r\n            [\"white walkers in another village\", [`🧛🧛 ${changes} corpses woke up and went to another village. Than they went back to you to sleep.`, this.warningStatus]],\r\n            [\"white walker killed\", [\"🧛🧛 Some zombies woke up and killed a few of your people. Than they went back. You have more corpses.\", this.dangerStatus]],\r\n            [\"death because of zombies\", [this.deathBecauseOfZombie, this.dangerStatus]],\r\n            // farmer\r\n            [\"potatoes\", [`👩‍🌾👩‍🌾 Farmers found ${changes} potatoes.🥔🥔🥔🥔`, this.successStatus]],\r\n            [\"kiwi\", [`👩‍🌾👩‍🌾 Farmers found ${changes} kiwi fruits.🥝🥝🥝🥝`, this.successStatus]],\r\n            [\"wild rabbits\", [\"🐰🐰🐰 Farmers saw the wild rabbits.\", this.primaryStatus]],\r\n            [\"rats\", [`🐀🐀🐀 Rats ate ${changes} of your food.`, this.dangerStatus]],\r\n            [\"assassin rabbits\", [`🐰🐰🐰 Obviously it was bad decision to take rabbit's food. Assassin rabbits killed : ${changes} farmers.`, this.dangerStatus]],\r\n            // weather\r\n            [\"middle earthquake\", [`🧶️ There was a middle earthquake. Some trees were down and it gave you : ${changes} woods.`, this.successStatus]],\r\n            [\"small rain\", [\"🌈 There was a small rain.\", this.primaryStatus]],\r\n            [\"light earthquake\", [\"🧶 There was a light earthquake.\", this.primaryStatus]],\r\n            [\"storm\", [`⛈️There is a storm. It spoiled some of your wood: ${changes} is lost.`, this.dangerStatus]],\r\n            [\"big earthquake\", [`🧶 ☹ There was a big earthquake. Unfortunately it killed: ${changes} of your miners.`, this.dangerStatus]],\r\n            // amazon\r\n            [\"amazons brought\", [`👧👧👧👧 Amazons brought a few males to your people . ${changes} new free people.`, this.successStatus]],\r\n            [\"amazons are there\", [\"People saw a lot of beautiful wild amazons 👧👧👧\", this.primaryStatus]],\r\n            [\"amazons speaking\", [\"👧👧👧 Your people communicated a bit with Amazons.\", this.primaryStatus]],\r\n            [\"amazons kidnapped\", [`👧👧👧👧 Wild Amazons kidnapped some of your people. Than they brought ${changes} male corpses back, you see smiles on corpse's faces.`, this.dangerStatus]],\r\n            // elf\r\n            [\"elves like\", [this.elvesLike, this.primaryStatus]],\r\n            [\"elves are disappointed\", [this.elvesAreDisappointed, this.primaryStatus]],\r\n            [\"elves can't cut trees\", [`${this.elvesCantCutTreeMsgPart1} ${changes} ${this.elvesCantCutTreePart2}`, this.dangerStatus]],\r\n            [\"elves don't like\", [`🧝🧝 Elves don't like when you cut trees. They killed: ${changes} of your woodcutters. They said - sorry.`, this.dangerStatus]],\r\n            // lifecycle\r\n            [\"new people were born\", [`👪👪 ${changes} new people were born.`, this.successStatus]],\r\n            [\"died because of age\", [`👪👪 ${changes} died because of old age.`, this.dangerStatus]]\r\n        ]);\r\n        let msgElem = msgMap.get(what);\r\n        let msg = msgElem[0];\r\n        let status = msgElem[1];\r\n\r\n        if (msg) {\r\n            let event = $(`<div class=\"alert alert-${status}\" role=\"alert\">${this.getMsgWithTime(msg)}</div>`);\r\n            this.pageManager.eventDiv.after(event);\r\n            this.pageManager.showElement([event]);\r\n\r\n            $(\"#events-section\").animate({scrollTop: 0}, \"fast\")\r\n        }\r\n    }\r\n\r\n    addAchievement(what) {\r\n        // TODO add flag\r\n        this.pageManager.hideElement([this.pageManager.notAchievement]);\r\n\r\n        // TODO move map from here\r\n        let achievementImgMap = new Map([\r\n            [\"UFO Alien\", this.pageManager.ufoAchievement],\r\n            [\"Palace\", this.pageManager.palaceAchievement],\r\n            [\"First Research\", this.pageManager.firstResearchAchievement],\r\n            [\"Starvation\", this.pageManager.hungerAchievement],\r\n            [\"Productivity\", this.pageManager.productivityAchievement],\r\n            [\"More Food\", this.pageManager.moreFoodAchievement]\r\n        ]);\r\n        let achievementImg = achievementImgMap.get(what);\r\n\r\n        if (achievementImg) {\r\n            this.pageManager.gotAchievementQuantitySpan.text(+this.pageManager.gotAchievementQuantitySpan.text() + 1);\r\n\r\n            this.pageManager.achievementSection.append(achievementImg);\r\n            let event = $(`<div class=\"alert alert-${this.successStatus}\" role=\"alert\"><span>${this.getMsgWithTime(this.newAchievement)}</span></div>`);\r\n            this.pageManager.eventDiv.after(event);\r\n            this.pageManager.showElement([event, achievementImg]);\r\n\r\n            $(\"#events-section\").animate({scrollTop: 0}, \"fast\")\r\n        }\r\n    }\r\n\r\n    getMsgWithTime(msg) {\r\n        return `${new Date().toLocaleTimeString()} : ${msg}`;\r\n    }\r\n\r\n    eventHappen() {\r\n        // TODO move this map upper\r\n        let eventMap = new Map([\r\n            [1, () => this.nothingHappenEvent()],\r\n            [2, () => this.ufoEvent()],\r\n            [3, () => this.farmerEvent()],\r\n            [4, () => this.weatherEvent()],\r\n            [5, () => this.wildAmazonEvent()],\r\n            [6, () => this.elfEvent()],\r\n            [7, () => this.bloodMoonEvent()],\r\n            [8, () => this.birthDeathCycleEvent()]\r\n\r\n            //    TODO add to storm and rename to weather\r\n            // // Drought (-foodProduction)\r\n            // // Animals (-citizen quantity)\r\n            // // Pets (+food consuming)\r\n            // // Im/Emigration (+current population, - knowledge)\r\n            // // Laziness/Motivation (-/+productivity)\r\n        ]);\r\n\r\n        let eventDiversity = this.configManager.currentPopulation.quantity > 20 ? eventMap.size : 1;\r\n        eventMap.get(this.getRandomInt(eventDiversity))();\r\n    }\r\n\r\n    nothingHappenEvent() {\r\n        this.addEvent(\"ok\");\r\n    }\r\n\r\n    ufoEvent() {\r\n        // TODO add \"ufo gave mighty artifact - button\"\r\n        let farmerQuantity = this.configManager.farmer.quantity;\r\n        if (farmerQuantity > 25) {\r\n            switch (this.getRandomInt(3)) {\r\n                case 1:\r\n                    let killedFarmerQuantity = Math.round(0.1 * farmerQuantity);\r\n                    this.addEvent(\"ufo killed\", killedFarmerQuantity);\r\n                    for (let i = 0; i < killedFarmerQuantity; i++) {\r\n                        this.citizenManager.killFarmer();\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    this.addEvent(\"nightmare\");\r\n                    break;\r\n                case 3:\r\n                    if (this.hiddenButtons.length > 0) {\r\n                        this.addEvent(\"ufo gave an useful artifact\");\r\n                        this.hiddenButtons.pop().slideToggle('slow');\r\n                    } else {\r\n                        let newResources = Math.round(0.6 * this.configManager.stone.quantity);\r\n                        this.addEvent(\"ufo gave an artifact\", newResources);\r\n                        this.configManager.stone.changeQuantity(newResources);\r\n                    }\r\n                    break;\r\n            }\r\n        } else {\r\n            this.addEvent(\"strange in the skies\");\r\n        }\r\n    }\r\n\r\n    farmerEvent() {\r\n        let farmerQuantity = this.configManager.farmer.quantity;\r\n\r\n        let foodQuantity = this.configManager.food.quantity;\r\n        switch (this.getRandomInt(5)) {\r\n            case 1:\r\n                this.addEvent(\"potatoes\", Math.round(foodQuantity * 1.8));\r\n                this.configManager.food.changeQuantity(Math.round(foodQuantity * 1.8));\r\n                break;\r\n            case 2:\r\n                this.addEvent(\"assassin rabbits\", Math.round(this.getRandomInt(farmerQuantity) * 0.15));\r\n                for (let i = 0, amount = Math.round(farmerQuantity * 0.15); i < amount; i++) {\r\n                    this.citizenManager.killFarmer();\r\n                }\r\n                break;\r\n            case 3:\r\n                this.addEvent(\"wild rabbits\");\r\n                break;\r\n            case 4:\r\n                this.addEvent(\"kiwi\", Math.round(foodQuantity * 2.5));\r\n                this.configManager.food.changeQuantity(Math.round(foodQuantity * 2.5));\r\n                break;\r\n            case 5:\r\n                this.addEvent(\"rats\", Math.round(foodQuantity * 0.9));\r\n                this.configManager.food.changeQuantity(-Math.round(foodQuantity * 0.9));\r\n                break;\r\n        }\r\n    }\r\n\r\n    weatherEvent() {\r\n        // TODO add illness\r\n        let woodQuantity = this.configManager.wood.quantity;\r\n        let minerQuantity = this.configManager.miner.quantity;\r\n        switch (this.getRandomInt(2)) {\r\n            // Storm\r\n            case 1:\r\n                if (woodQuantity > 20) {\r\n                    let lostWoodQuantity = Math.round(woodQuantity * 0.3);\r\n                    this.addEvent(\"storm\", lostWoodQuantity);\r\n                    this.configManager.wood.changeQuantity(-lostWoodQuantity);\r\n                } else {\r\n                    this.addEvent(\"small rain\");\r\n                }\r\n                break;\r\n            // Earthquake\r\n            case 2:\r\n                switch (this.getRandomInt(2)) {\r\n                    case 1:\r\n                        if (minerQuantity > 7) {\r\n                            let killedMinerQuantity = Math.round(0.3 * minerQuantity);\r\n                            this.addEvent(\"big earthquake\", killedMinerQuantity);\r\n                            for (let i = 0, amount = killedMinerQuantity; i < amount; i++) {\r\n                                this.citizenManager.killMiner();\r\n                            }\r\n                        } else {\r\n                            let newResourceQuantity = Math.round(0.33 * this.configManager.woodStorage.quantity);\r\n                            this.addEvent(\"middle earthquake\", newResourceQuantity);\r\n                            this.configManager.wood.changeQuantity(newResourceQuantity);\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        this.addEvent(\"light earthquake\");\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    wildAmazonEvent() {\r\n        let scientistQuantity = this.configManager.scientist.quantity;\r\n        if (scientistQuantity > 10) {\r\n            switch (this.getRandomInt(3)) {\r\n                case 1:\r\n                    this.addEvent(\"amazons speaking\");\r\n                    break;\r\n                case 2:\r\n                    let killedScientistQuantity = Math.round(0.5 * scientistQuantity);\r\n                    this.addEvent(\"amazons kidnapped\", killedScientistQuantity);\r\n                    for (let i = 0, amount = killedScientistQuantity; i < amount; i++) {\r\n                        this.citizenManager.killScientist();\r\n                    }\r\n                    this.configManager.knowledge.changeQuantity(-this.configManager.knowledge.quantity * 0.5);\r\n                    break;\r\n                case 3:\r\n                    let newMaleQuantity = Math.round(0.25 * scientistQuantity);\r\n                    this.addEvent(\"amazons brought\", newMaleQuantity);\r\n                    this.citizenManager.addCitizen(newMaleQuantity);\r\n                    break;\r\n            }\r\n        } else {\r\n            this.addEvent(\"amazons are there\");\r\n        }\r\n    }\r\n\r\n    elfEvent() {\r\n        switch (this.getRandomInt(2)) {\r\n            case 1:\r\n                let woodQuantity = Math.floor(this.configManager.wood.quantity);\r\n                if (woodQuantity > 20) {\r\n                    this.addEvent(\"elves can't cut trees\", woodQuantity);\r\n                    this.configManager.wood.changeQuantity(-woodQuantity);\r\n                } else {\r\n                    this.addEvent(\"elves are disappointed\");\r\n                }\r\n                break;\r\n            case 2:\r\n                if (this.configManager.woodman.quantity > 7) {\r\n                    let killedWoodmanQuantity = Math.floor(this.configManager.woodman.quantity * 0.9);\r\n                    this.addEvent(\"elves don't like\", killedWoodmanQuantity);\r\n                    for (let i = 0; i < killedWoodmanQuantity; i++) {\r\n                        this.citizenManager.killWoodcutter();\r\n                    }\r\n                } else {\r\n                    this.addEvent(\"elves like\");\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    bloodMoonEvent() {\r\n        let corpseQuantity = this.configManager.corpse.quantity;\r\n        if (corpseQuantity) {\r\n            switch (this.getRandomInt(2)) {\r\n                case 1:\r\n                    this.addEvent(\"overturned corpses\");\r\n                    break;\r\n                case 2:\r\n                    let zombieQuantity = Math.round(this.getRandomInt(corpseQuantity) / 2);\r\n                    switch (this.getRandomInt(2)) {\r\n                        case 1:\r\n                            if (zombieQuantity && this.configManager.currentPopulation.quantity) {\r\n                                this.addEvent(\"white walker killed\");\r\n                                let killedCitizenQuantity = this.configManager.currentPopulation.quantity > zombieQuantity ? zombieQuantity : zombieQuantity + 1;\r\n                                for (let i = 0; i < killedCitizenQuantity; i++) {\r\n                                    this.citizenManager.findPersonToKill();\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            this.addEvent(\"white walkers in another village\", zombieQuantity);\r\n                            break;\r\n                    }\r\n            }\r\n        } else {\r\n            this.addEvent(\"fool moon\");\r\n        }\r\n    }\r\n\r\n    birthDeathCycleEvent() {\r\n        let currentPopulationQuantity = this.configManager.currentPopulation.quantity;\r\n        let changeQuantity = Math.floor(this.getRandomInt(currentPopulationQuantity) * 0.2);\r\n        if (changeQuantity) {\r\n            switch (this.getRandomInt(2)) {\r\n                case 1:\r\n                    this.addEvent(\"new people were born\", changeQuantity);\r\n                    this.citizenManager.addCitizen(changeQuantity);\r\n                    break;\r\n                case 2:\r\n                    this.addEvent(\"died because of age\", changeQuantity);\r\n                    for (let i = 0; i < changeQuantity; i++) {\r\n                        this.citizenManager.findPersonToKill();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getRandomInt(max) {\r\n        return Math.floor(Math.random() * Math.floor(max)) + 1;\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (EventManager);\n\n//# sourceURL=webpack:///./src/eventManager.js?");

/***/ }),

/***/ "./src/gameManager.js":
/*!****************************!*\
  !*** ./src/gameManager.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _eventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventManager */ \"./src/eventManager.js\");\n/* harmony import */ var _configManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./configManager */ \"./src/configManager.js\");\n/* harmony import */ var _builderManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./builderManager */ \"./src/builderManager.js\");\n/* harmony import */ var _pageManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pageManager */ \"./src/pageManager.js\");\n/* harmony import */ var _citizenManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./citizenManager */ \"./src/citizenManager.js\");\n/* harmony import */ var _scienceManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scienceManager */ \"./src/scienceManager.js\");\n/* harmony import */ var _intervalManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./intervalManager */ \"./src/intervalManager.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass GameManager {\r\n    constructor() {\r\n        this.pageManager = new _pageManager__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n        this.eventManager = new _eventManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n        this.configManager = new _configManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n        this.builderManager = new _builderManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n        this.citizenManager = new _citizenManager__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\r\n        this.scienceManager = new _scienceManager__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\r\n        this.intervalManager = new _intervalManager__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\r\n\r\n        this.pageManager.initialization(this);\r\n        this.eventManager.initialization(this);\r\n        this.configManager.initialization(this);\r\n        this.builderManager.initialization(this);\r\n        this.citizenManager.initialization(this);\r\n        this.scienceManager.initialization(this);\r\n        this.intervalManager.initialization(this);\r\n\r\n        this.userKey = \"USER_NAME\";\r\n        this.config = \"GAME_CONFIG\";\r\n    }\r\n\r\n    initialization() {\r\n        let userName = this.getUserName();\r\n        if (userName === \"UFO Alien\") {\r\n            this.eventManager.addAchievement(\"UFO Alien\");\r\n        }\r\n\r\n        this.intervalManager.runInterval();\r\n        this.runTooltips();\r\n    }\r\n\r\n    // TODO add save/load buttons\r\n    loadGame() {\r\n\r\n    }\r\n\r\n    saveGame() {\r\n\r\n    }\r\n\r\n    getUserName() {\r\n        let userName = localStorage.getItem(this.userKey);\r\n        if (userName) {\r\n            userName = confirm(`＼(￣▽￣)／, are you ${userName}, yes?`) ? userName : prompt(\"＼(￣▽￣)／ Great person, say me, what is your name?\") || \"UFO Alien\";\r\n        } else {\r\n            userName = prompt(\"＼(￣▽￣)／ Great person, say me, what is your name?\") || \"UFO Alien\";\r\n        }\r\n        userName = userName.charAt(0).toUpperCase() + userName.slice(1);\r\n        this.configManager.userName = userName;\r\n\r\n        localStorage.setItem(this.userKey, userName);\r\n        this.pageManager.userNameElement.text(userName);\r\n        return userName;\r\n    }\r\n\r\n    clickResourceButton(resourceType, quantity) {\r\n        resourceType.changeQuantity(quantity);\r\n\r\n        let buttonToBlur = this.pageManager.foodClickButton;\r\n        switch (resourceType) {\r\n            case \"wood\":\r\n                buttonToBlur = this.pageManager.woodClickButton;\r\n                break;\r\n            case \"stone\":\r\n                buttonToBlur = this.pageManager.stoneClickButton;\r\n                break;\r\n        }\r\n        buttonToBlur.blur();\r\n    }\r\n\r\n    createWorker(quantity) {\r\n        this.citizenManager.tryToCreateCitizen(quantity);\r\n    }\r\n\r\n    setWorker(workType, quantity) {\r\n        let result = this.citizenManager.setCitizenToWork(workType, quantity);\r\n        this.checkLeaderPresence(result, workType);\r\n        return result;\r\n    }\r\n\r\n    checkLeaderPresence(result, workType) {\r\n        if (result && workType === this.configManager.leader && !this.configManager.leaderPresentFlag) {\r\n            this.pageManager.workTableEmptyTd.attr(\"colspan\", \"7\");\r\n            this.pageManager.showElement([this.pageManager.tenWorkTd]);\r\n\r\n            this.configManager.leaderPresentFlag = true;\r\n        }\r\n    }\r\n\r\n    build(buildingType) {\r\n        return this.builderManager.buildNewBuilding(buildingType);\r\n    }\r\n\r\n    research(name) {\r\n        return this.scienceManager.research(name);\r\n    }\r\n\r\n    reloadSite() {\r\n        _pageManager__WEBPACK_IMPORTED_MODULE_3__[\"default\"].reloadSite();\r\n    }\r\n\r\n    pause() {\r\n        $(\"body\").css({\"opacity\": \"0.1\"});\r\n        setTimeout(()=>{\r\n            alert(\"...pause. \");\r\n        }, 100);\r\n        setTimeout(()=>{\r\n            $(\"body\").css({\"opacity\": \"1\"});\r\n        }, 300);\r\n    }\r\n\r\n    getFullResources() {\r\n        this.configManager.food.changeQuantity(this.configManager.foodStorage.quantity);\r\n        this.configManager.wood.changeQuantity(this.configManager.woodStorage.quantity);\r\n        this.configManager.stone.changeQuantity(this.configManager.stoneStorage.quantity);\r\n        this.configManager.knowledge.changeQuantity(this.configManager.knowledgeStorage.quantity);\r\n    }\r\n\r\n    runTooltips() {\r\n        $('[data-toggle=\"tooltip\"]').tooltip();\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameManager);\n\n//# sourceURL=webpack:///./src/gameManager.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gameManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameManager */ \"./src/gameManager.js\");\n\r\n\r\n$(function () {\r\n    \"use strict\";\r\n    let gameManager = new _gameManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    let pageManager = gameManager.pageManager;\r\n    gameManager.initialization();\r\n    // CLICK EVENTS\r\n    // 1. CLICK TO THE RESOURCES\r\n    $(pageManager.foodClickButton).on(\"click\", () => gameManager.clickResourceButton(gameManager.configManager.food, gameManager.configManager.clickEfficiency));\r\n    $(pageManager.woodClickButton).on(\"click\", () => gameManager.clickResourceButton(gameManager.configManager.wood, gameManager.configManager.clickEfficiency));\r\n    $(pageManager.stoneClickButton).on(\"click\", () => gameManager.clickResourceButton(gameManager.configManager.stone, gameManager.configManager.clickEfficiency));\r\n    // 2. START AGAIN\r\n    $(pageManager.startAgainButton).on(\"click\", () => gameManager.reloadSite());\r\n    $(pageManager.pauseButton).on(\"click\", () => gameManager.pause());\r\n    $(pageManager.getFullButton).on(\"click\", () => gameManager.getFullResources());\r\n    // 3. CREATE WORKER\r\n    $(pageManager.createCitizenButton).on(\"click\", () => gameManager.createWorker(1));\r\n    // 4. BUILD\r\n    $(pageManager.buildGraveButton).on(\"click\", () => gameManager.build(\"grave\"));\r\n    $(pageManager.buildScrollButton).on(\"click\", () => gameManager.build(\"scroll\"));\r\n    $(pageManager.buildGranaryButton).on(\"click\", () => gameManager.build(\"granary\"));\r\n    $(pageManager.buildPitButton).on(\"click\", () => gameManager.build(\"pit\"));\r\n    $(pageManager.buildTentButton).on(\"click\", () => gameManager.build(\"tent\"));\r\n    $(pageManager.buildHutButton).on(\"click\", () => gameManager.build(\"hut\"));\r\n    $(pageManager.buildCampfireButton).on(\"click\", () => gameManager.build(\"campfire\"));\r\n    $(pageManager.buildDolmenButton).on(\"click\", () => gameManager.build(\"dolmen\"));\r\n    // TODO in bronze age\r\n    // $(\"#build-parthenon-button\").on(\"click\",() => gameManager.build(\"partheon));\r\n    $(pageManager.buildMusicClubButton).on(\"click\", () => gameManager.build(\"music-club\"));\r\n    $(pageManager.buildYogaClubButton).on(\"click\", () => gameManager.build(\"yoga-club\"));\r\n    $(pageManager.buildPalaceButton).on(\"click\", () => gameManager.build(\"palace\"));\r\n    $(pageManager.buildBarrackButton).on(\"click\", () => gameManager.build(\"barrack\"));\r\n\r\n    // WORK SETTINGS\r\n    // 1. FARMER\r\n    $(pageManager.remove10FarmerButton).on(\"click\", () => repeatSetWorker(10, gameManager.configManager.farmer, false));\r\n    $(pageManager.removeFarmerButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.farmer, -1));\r\n    $(pageManager.add10FarmerButton).on(\"click\", () => repeatSetWorker(10, gameManager.configManager.farmer, true));\r\n    $(pageManager.addFarmerButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.farmer, 1));\r\n    // 2. WOODCUTTER\r\n    $(pageManager.remove10WoodmanButton).on(\"click\", () => repeatSetWorker(10, gameManager.configManager.woodman, false));\r\n    $(pageManager.removeWoodmanButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.woodman, -1));\r\n    $(pageManager.add10WoodmanButton).on(\"click\", () => repeatSetWorker(10, gameManager.configManager.woodman, true));\r\n    $(pageManager.addWoodmanButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.woodman, 1));\r\n    // 3. MINER\r\n    $(pageManager.remove10MinerButton).on(\"click\", () => repeatSetWorker(10, gameManager.configManager.miner, false));\r\n    $(pageManager.removeMinerButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.miner, -1));\r\n    $(pageManager.add10MinerButton).on(\"click\", () => repeatSetWorker(10, gameManager.configManager.miner, true));\r\n    $(pageManager.addMinerButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.miner, 1));\r\n    // 4. SCIENTIST\r\n    $(pageManager.remove10ScientistButton).on(\"click\", () => repeatSetWorker(10, gameManager.configManager.scientist, false));\r\n    $(pageManager.removeScientistButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.scientist, -1));\r\n    $(pageManager.add10ScientistButton).on(\"click\", () => repeatSetWorker(10, gameManager.configManager.scientist, true));\r\n    $(pageManager.addScientistButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.scientist, 1));\r\n    // 5. FUNERAL\r\n    $(pageManager.removeFuneralButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.funeral, -2));\r\n    $(pageManager.addFuneralButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.funeral, 2));\r\n    // 6. Dj\r\n    $(pageManager.addDjButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.dj, 1));\r\n    // 7. Instructor\r\n    $(pageManager.addInstructorButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.instructor, 1));\r\n    // 8. LEADER\r\n    $(pageManager.addLeaderButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.leader, 1));\r\n    // 9. WARRIOR\r\n    $(pageManager.addWarriorButton).on(\"click\", () => gameManager.setWorker(gameManager.configManager.warrior, 1));\r\n\r\n    function repeatSetWorker(repeatAmount, workerType, increase) {\r\n        let quantity = increase ? 1 : -1;\r\n        for (let i = 0; i < repeatAmount; i++) {\r\n            if (!gameManager.setWorker(workerType, quantity)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TECHNOLOGIES\r\n    // 1. BEGINNING\r\n    $(pageManager.researchChangesButton).on(\"click\", () => gameManager.research(\"changes\"));\r\n    // 2. CHANGES 1\r\n    $(pageManager.researchAgricultureButton).on(\"click\", () => gameManager.research(\"agriculture\"));\r\n    $(pageManager.researchArchitectureButton).on(\"click\", () => gameManager.research(\"architecture\"));\r\n    $(pageManager.researchFuneralButton).on(\"click\", () => gameManager.research(\"funeral\"));\r\n    $(pageManager.researchChanges2Button).on(\"click\", () => gameManager.research(\"changes2\"));\r\n    // 3. CHANGES 2\r\n    $(pageManager.researchLeadershipButton).on(\"click\", () => gameManager.research(\"leadership\"));\r\n    $(pageManager.researchAgriculture2Button).on(\"click\", () => gameManager.research(\"agriculture2\"));\r\n    $(pageManager.researchArchitecture2Button).on(\"click\", () => gameManager.research(\"architecture2\"));\r\n    $(pageManager.researchStoneAgeButton).on(\"click\", () => gameManager.research(\"stone age\"));\r\n    // 4. STONE AGE\r\n    $(pageManager.researchArchitecture3Button).on(\"click\", () => gameManager.research(\"architecture3\"));\r\n    $(pageManager.researchMusicButton).on(\"click\", () => gameManager.research(\"music\"));\r\n    $(pageManager.researchSportButton).on(\"click\", () => gameManager.research(\"sport\"));\r\n    $(pageManager.researchToolButton).on(\"click\", () => gameManager.research(\"tool\"));\r\n    $(pageManager.researchWeaponButton).on(\"click\", () => gameManager.research(\"weapon\"));\r\n    $(pageManager.researchHoeButton).on(\"click\", () => gameManager.research(\"hoe\"));\r\n    $(pageManager.researchAxeButton).on(\"click\", () => gameManager.research(\"axe\"));\r\n    $(pageManager.researchPickaxeButton).on(\"click\", () => gameManager.research(\"pickaxe\"));\r\n    $(pageManager.research2sideScrollButton).on(\"click\", () => gameManager.research(\"2 side scroll\"));\r\n    $(pageManager.researchArchitecture4Button).on(\"click\", () => gameManager.research(\"architecture4\"));\r\n});\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/intervalManager.js":
/*!********************************!*\
  !*** ./src/intervalManager.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// TODO move all logic of this class to game class\r\nclass IntervalManager {\r\n    constructor() {\r\n        this.gameManager = null;\r\n        this.pageManager = null;\r\n        this.configManager = null;\r\n        this.eventManager = null;\r\n        this.citizenManager = null;\r\n\r\n        this.oneStepTime = 1e3;\r\n    }\r\n\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n        this.configManager = this.gameManager.configManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.citizenManager = this.gameManager.citizenManager;\r\n    }\r\n\r\n    checkHiddenTables() {\r\n        // Show tables\r\n        if (!this.configManager.showPeopleTableFlag && this.configManager.food.quantity > 5) {\r\n            this.pageManager.toggleElement(this.pageManager.peopleProductivityTable, []);\r\n            this.configManager.showPeopleTableFlag = true;\r\n        }\r\n        if (!this.configManager.showWorkTableFlag && this.configManager.currentPopulation.quantity > 0) {\r\n            this.pageManager.toggleElement(this.pageManager.workTable, [this.pageManager.clickResourceWoodRow, this.pageManager.clickResourceStoneRow]);\r\n            this.configManager.showWorkTableFlag = true;\r\n        }\r\n        if (!this.configManager.showBuildingTableFlag && this.configManager.currentPopulation.quantity === this.configManager.populationStorage.quantity) {\r\n            this.pageManager.toggleElement(this.pageManager.buildingTable, []);\r\n            this.configManager.showBuildingTableFlag = true;\r\n        }\r\n        if (!this.configManager.showTechnologyTableFlag && this.configManager.wood.quantity > 14) {\r\n            this.pageManager.toggleElement(this.pageManager.technologyTable, []);\r\n            this.configManager.showTechnologyTableFlag = true;\r\n        }\r\n    }\r\n\r\n    runInterval() {\r\n        this.oneStep(this.oneStepTime);\r\n        this.events(this.oneStepTime * 30);\r\n        this.funeralProcess(this.oneStepTime * 5);\r\n        this.checkWinCondition(this.oneStepTime * 10);\r\n    }\r\n\r\n    oneStep(timeout) {\r\n        setInterval(() => {\r\n            // get resources\r\n            this.configManager.food.changeQuantity(this.configManager.foodTotalProduction.quantity);\r\n            this.configManager.wood.changeQuantity(this.configManager.woodTotalProduction.quantity);\r\n            this.configManager.stone.changeQuantity(this.configManager.stoneTotalProduction.quantity);\r\n            this.configManager.knowledge.changeQuantity(this.configManager.knowledgeTotalProduction.quantity);\r\n\r\n            this.checkHiddenTables();\r\n\r\n            //starvation process\r\n            if (this.configManager.food.quantity < 0 && this.configManager.currentPopulation.quantity > 0) {\r\n                this.eventManager.addEvent(\"starvation\");\r\n                if (!this.configManager.starvationAchievementFlag) {\r\n                    this.eventManager.addAchievement(\"Starvation\");\r\n                    this.configManager.starvationAchievementFlag = true;\r\n                }\r\n                this.pageManager.showElement([this.pageManager.starvationWarning]);\r\n\r\n                this.citizenManager.findPersonToKill();\r\n\r\n                // Decrease quantity of happy\r\n                if (this.configManager.currentHappyPeople.quantity > this.configManager.currentPopulation) {\r\n                    this.configManager.currentHappyPeople(-1);\r\n                }\r\n                // and healthy people\r\n                if (this.configManager.currentHealthyPeople.quantity > this.configManager.currentPopulation) {\r\n                    this.configManager.currentHealthyPeople(-1);\r\n                }\r\n            } else {\r\n                this.pageManager.hideElement([this.pageManager.starvationWarning]);\r\n            }\r\n\r\n            this.pageManager.checkProduction();\r\n            this.pageManager.checkOverpopulated();\r\n\r\n            // TODO abundance of food\r\n            if (!this.configManager.productivityAchievementFlag && this.configManager.productivity >= 190) {\r\n                this.eventManager.addAchievement(\"Productivity\");\r\n                this.configManager.productivityAchievementFlag = true;\r\n            }\r\n\r\n            // TODO add more bad events when it isn't focus\r\n            // console.log(document.hasFocus());\r\n        }, timeout);\r\n    }\r\n\r\n    checkWinCondition(timeout) {\r\n        setInterval(() => {\r\n            if (this.configManager.knowledge.quantity >= this.configManager.WINNER_REQUIREMENTS) {\r\n                if (confirm(`${this.configManager.userName} are amazing! Congratulations! You collected a lot of knowledge!! \\nAlso you've killed: ${this.configManager.corpse.quantity\r\n                + this.configManager.inGraveQuantity.quantity} people. Great job\\n`)) {\r\n                    this.gameManager.reloadSite();\r\n                } else {\r\n                    this.configManager.knowledge.changeQuantity(-this.configManager.WINNER_REQUIREMENTS);\r\n                }\r\n            }\r\n        }, timeout);\r\n    }\r\n\r\n    funeralProcess(timeout) {\r\n        setInterval(() => {\r\n            let maxFuneral = Math.min.apply(null, [this.configManager.corpseStorage.quantity - this.configManager.inGraveQuantity.quantity,\r\n                this.configManager.corpse.quantity, this.configManager.funeral.quantity / 2]);\r\n            if (maxFuneral) {\r\n                for (let i = 0; i < maxFuneral; i++) {\r\n                    this.configManager.corpse.changeQuantity(-1);\r\n                    this.configManager.inGraveQuantity.changeQuantity(1);\r\n                }\r\n                $(this.pageManager.funeralProcessImg).show(\"slow\");\r\n            } else {\r\n                $(this.pageManager.funeralProcessImg).hide(\"slow\");\r\n            }\r\n        }, timeout);\r\n    }\r\n\r\n    events(timeout) {\r\n        setInterval(() => this.eventManager.eventHappen(), timeout);\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (IntervalManager);\n\n//# sourceURL=webpack:///./src/intervalManager.js?");

/***/ }),

/***/ "./src/pageManager.js":
/*!****************************!*\
  !*** ./src/pageManager.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass PageManager {\r\n    constructor() {\r\n        this.userNameElement = $(\"#user-name\");\r\n        this.startAgainButton = $(\"#start-again-button\");\r\n        this.pauseButton = $(\"#pause-button\");\r\n        this.getFullButton = $(\"#getFullButton\");\r\n        this.starvationWarning = $(\"#starvation-warning\");\r\n        this.notAchievement = $(\"#not-achievement\");\r\n\r\n        this.foodClickButton = $(\"#food-click-button\");\r\n        this.foodQuantityElement = $(\"#food-quantity\");\r\n        this.maxFoodQuantityElement = $(\"#max-food-quantity-span\");\r\n        this.foodProductionElement = $(\"#food-production-quantity\");\r\n\r\n        this.clickResourceWoodRow = $(\"#click-resource-wood-row\");\r\n        this.woodClickButton = $(\"#wood-click-button\");\r\n        this.woodQuantityElement = $(\"#wood-quantity\");\r\n        this.maxWoodQuantityElement = $(\"#max-wood-quantity-span\");\r\n        this.woodProductionElement = $(\"#wood-production-quantity\");\r\n        this.stoneClickButton = $(\"#stone-click-button\");\r\n\r\n        this.clickResourceStoneRow = $(\"#click-resource-stone-row\");\r\n        this.stoneQuantityElement = $(\"#stone-quantity\");\r\n        this.maxStoneQuantityElement = $(\"#max-stone-quantity-span\");\r\n        this.stoneProductionElement = $(\"#stone-production-quantity\");\r\n\r\n        this.emptyRowBeforeKnowledge = $(\"#empty-row-before-knowledge\");\r\n        this.knowledgeRow = $(\"#knowledge-row\");\r\n        this.knowledgeQuantityElement = $(\"#knowledge-quantity\");\r\n        this.maxKnowledgeQuantityElement = $(\"#max-knowledge-quantity-span\");\r\n        this.knowledgeProductionElement = $(\"#knowledge-production-quantity\");\r\n\r\n        this.peopleProductivityTable = $(\"#people-productivity-table\");\r\n        this.createCitizenButton = $(\"#create-worker-button\");\r\n        this.curPopulationElement = $(\"#current-population\");\r\n        this.maxPopulationElement = $(\"#max-population\");\r\n\r\n        this.corpseRow = $(\"#corpse-row\");\r\n        this.corpseQuantityElement = $(\"#corpse-quantity\");\r\n\r\n        this.inGravesRow = $(\"#in-graves-row\");\r\n        this.inGraveQuantityElement = $(\"#in-graves-quantity\");\r\n        this.maxInGravesQuantityElement = $(\"#max-in-graves-quantity\");\r\n\r\n        this.emptyRowBeforHappinessRowElement = $(\"#empty-row-before-happiness\");\r\n        this.happinessRowElement = $(\"#happiness-row\");\r\n        this.healthRowElement = $(\"#health-row\");\r\n        this.curHappyPeopleElement = $(\"#current-happy-people\");\r\n        this.maxHappyPeopleElement = $(\"#max-happy-people\");\r\n        this.curHealthyPeopleElement = $(\"#current-healthy-people\");\r\n        this.maxHealthyPeopleElement = $(\"#max-healthy-people\");\r\n\r\n        this.emptyRowBeforProductivityRowElement = $(\"#empty-row-before-productivity\");\r\n        this.productivityRowElement = $(\"#productivity-row\");\r\n        this.productivityQuantityElement = $(\"#productivity-quantity\");\r\n\r\n        this.workTable = $(\"#work-table\");\r\n        this.tenWorkTd = $(\".ten-work-td\");\r\n        this.workTableEmptyTd = $(\"#work-table .empty-row td\");\r\n        this.curLazybonesElement = $(\"#lazybone-quantity\");\r\n\r\n        this.add10FarmerButton = $(\"#add-10-farmer-button\");\r\n\r\n        this.addFarmerButton = $(\"#add-farmer-button\");\r\n        this.removeFarmerButton = $(\"#remove-farmer-button\");\r\n        this.remove10FarmerButton = $(\"#remove-10-farmer-button\");\r\n        this.farmerQuantityElement = $(\"#farmer-quantity\");\r\n        this.add10WoodmanButton = $(\"#add-10-woodcutter-button\");\r\n\r\n        this.addWoodmanButton = $(\"#add-woodcutter-button\");\r\n        this.removeWoodmanButton = $(\"#remove-woodcutter-button\");\r\n        this.remove10WoodmanButton = $(\"#remove-10-woodcutter-button\");\r\n        this.woodmenQuantityElement = $(\"#woodcutter-quantity\");\r\n        this.add10MinerButton = $(\"#add-10-miner-button\");\r\n\r\n        this.addMinerButton = $(\"#add-miner-button\");\r\n        this.removeMinerButton = $(\"#remove-miner-button\");\r\n        this.remove10MinerButton = $(\"#remove-10-miner-button\");\r\n        this.minerQuantityElement = $(\"#miner-quantity\");\r\n        this.add10ScientistButton = $(\"#add-10-scientist-button\");\r\n\r\n        this.addScientistButton = $(\"#add-scientist-button\");\r\n        this.removeScientistButton = $(\"#remove-scientist-button\");\r\n        this.remove10ScientistButton = $(\"#remove-10-scientist-button\");\r\n        this.emptyRowBeforeJobScientist = $(\"#empty-row-before-job-scientist\");\r\n        this.jobScientistRow = $(\"#job-scientist-row\");\r\n        this.curScientistQuantityElement = $(\"#scientist-quantity\");\r\n        this.maxScientistQuantityElement = $(\"#max-scientist-quantity\");\r\n        this.emptyRowBeforeJobFuneral = $(\"#empty-row-before-job-funeral\");\r\n\r\n        this.addFuneralButton = $(\"#add-funeral-button\");\r\n        this.removeFuneralButton = $(\"#remove-funeral-button\");\r\n        this.jobFuneralRow = $(\"#job-funeral-process-row\");\r\n        this.funeralQuantityElement = $(\"#funeral-process-quantity\");\r\n        this.funeralProcessImg = $(\"#funeral-process-img\");\r\n        this.emptyRowBeforeJobInClubElement = $(\"#empty-row-before-job-in-club\");\r\n\r\n        this.jobDjRowElement = $(\"#job-dj-row\");\r\n        this.djQuantityElement = $(\"#dj-quantity\");\r\n        this.maxDjQuantityElement = $(\"#max-dj-quantity\");\r\n        this.addDjButton = $(\"#add-dj-button\");\r\n        this.jobInstructorRowElement = $(\"#job-instructor-row\");\r\n        this.maxInstructorQuantityElement = $(\"#max-instructor-quantity\");\r\n        this.instructorQuantityElement = $(\"#instructor-quantity\");\r\n        this.addInstructorButton = $(\"#add-instructor-button\");\r\n        this.emptyRowBeforeJobLeader = $(\"#empty-row-before-job-leader\");\r\n\r\n        this.leaderRow = $(\"#job-leader-row\");\r\n        this.leaderQuantityElement = $(\"#leader-quantity\");\r\n        this.addLeaderButton = $(\"#add-leader-button\");\r\n        this.jobWarriorRow = $(\"#job-warrior-row\");\r\n\r\n        this.addWarriorButton = $(\"#add-warrior-button\");\r\n        this.warriorQuantityElement = $(\"#warrior-quantity\");\r\n        this.maxWarriorQuantityElement = $(\"#max-warrior-quantity\");\r\n        this.buildGraveButton = $(\"#build-grave-button\");\r\n\r\n        this.buildingTable = $(\"#building-table\");\r\n        this.buildGraveRow = $(\"#build-grave-row\");\r\n        this.graveQuantityElement = $(\"#grave-quantity\");\r\n        this.buildScrollRow = $(\"#build-scroll-row\");\r\n        this.buildScrollButton = $(\"#build-scroll-button\");\r\n        this.buildScrollDefinition = $(\"#build-scroll-definition\");\r\n        this.scrollQuantityElement = $(\"#scroll-quantity\");\r\n        this.buildGranaryButton = $(\"#build-storage-granary-button\");\r\n        this.buildGranaryRow = $(\"#build-storage-granary-row\");\r\n        this.granaryQuantityElement = $(\"#granary-quantity\");\r\n        this.buildPitButton = $(\"#build-storage-pit-button\");\r\n        this.buildPitRow = $(\"#build-storage-pit-row\");\r\n        this.pitQuantityElement = $(\"#pit-quantity\");\r\n\r\n        this.emptyRowBeforePopulationBuilding = $(\"#empty-row-before-population-building\");\r\n        this.buildTentButton = $(\"#build-tent-button\");\r\n        this.tentQuantityElement = $(\"#tent-quantity\");\r\n        this.buildHutButton = $(\"#build-hut-button\");\r\n        this.buildHutRow = $(\"#build-population-hut-row\");\r\n        this.hutQuantityElement = $(\"#hut-quantity\");\r\n\r\n        this.emptyRowBeforeBuildKnowlegde = $(\"#empty-row-before-knowledge-building\");\r\n        this.buildCampfireButton = $(\"#build-campfire-button\");\r\n        this.buildCampfireRow = $(\"#build-knowledge-campfire-row\");\r\n        this.campfireQuantityElement = $(\"#campfire-quantity\");\r\n        this.buildDolmenButton = $(\"#build-dolmen-button\");\r\n        this.buildDolmenRow = $(\"#build-knowledge-dolmen-row\");\r\n        this.dolmenQuantityElement = $(\"#dolmen-quantity\");\r\n\r\n        this.emptyRowBeforeBuildEfficiency = $(\"#empty-row-before-build-club\");\r\n        this.buildMusicClubButton = $(\"#build-music-club-button\");\r\n        this.buildMusicClubRow = $(\"#build-music-club-row\");\r\n        this.musicClubQuantityElement = $(\"#music-club-quantity\");\r\n        this.buildYogaClubButton = $(\"#build-yoga-club-button\");\r\n        this.buildYogaClubRow = $(\"#build-yoga-club-row\");\r\n        this.yogaClubQuantityElement = $(\"#yoga-club-quantity\");\r\n        this.buildPalaceButton = $(\"#build-palace-button\");\r\n        this.buildPalaceRow = $(\"#build-palace-row\");\r\n        this.palaceQuantityElement = $(\"#palace-quantity\");\r\n\r\n        this.emptyRowbeforeBuildWar = $(\"#empty-row-before-build-war\");\r\n        this.buildBarrackButton = $(\"#build-barrack-button\");\r\n        this.buildBarrackRow = $(\"#build-war-barrack-row\");\r\n        this.barrackQuantityElement = $(\"#barrack-quantity\");\r\n\r\n        this.eventDiv = $(\"#events-section span\");\r\n\r\n        this.achievementSection = $(\"#achievement-section\");\r\n        this.gotAchievementQuantitySpan = $(\"#got-achievement-quantity-span\");\r\n        this.ufoAchievement = $(\"<img alt='alien img' src='res/img/achievement/alien.png' title='Player is an alien'/>\");\r\n        this.palaceAchievement = $(\"<img alt='palace ach img' src='res/img/stone%20age/palace.png' title='Build a palace'/>\");\r\n        this.firstResearchAchievement = $(\"<img alt='first research img' src='res/img/achievement/knowledge.png' title='First research'/>\");\r\n        this.hungerAchievement = $(\"<img alt='starving img' src='res/img/common/death.png' title='Death from hunger'/>\");\r\n        this.productivityAchievement = $(\"<img alt='productivity img' src='res/img/achievement/speedometer.png' title='Achieve high productivity (more than 190%)'/>\");\r\n        this.moreFoodAchievement = $(\"<img alt='farmer production img' src='res/img/achievement/food.png' title='Even more food, hurray!!! :)'/>\");\r\n\r\n        this.technologyTable = $(\"#technology-table\");\r\n        this.researchChangesButton = $(\"#tech-changes-button\");\r\n        this.techChangesElement = $(\"#tech-changes-row\");\r\n\r\n        this.researchAgricultureButton = $(\"#tech-agriculture-button\");\r\n        this.techAgricultureElement = $(\"#tech-agriculture-row\");\r\n\r\n        this.researchArchitectureButton = $(\"#tech-architecture-button\");\r\n        this.techArchitectureElement = $(\"#tech-architecture-row\");\r\n\r\n        this.researchFuneralButton = $(\"#tech-funeral-button\");\r\n        this.techFuneralElement = $(\"#tech-funeral-row\");\r\n\r\n        this.researchChanges2Button = $(\"#tech-changes2-button\");\r\n        this.techChanges2Element = $(\"#tech-changes2-row\");\r\n\r\n        this.researchLeadershipButton = $(\"#tech-leadership-button\");\r\n        this.techLeadershipElement = $(\"#tech-leadership-row\");\r\n\r\n        this.researchAgriculture2Button = $(\"#tech-agriculture-2-button\");\r\n        this.techAgriculture2Element = $(\"#tech-agriculture-2-row\");\r\n\r\n        this.researchArchitecture2Button = $(\"#tech-architecture-2-button\");\r\n        this.techArchitecture2Element = $(\"#tech-architecture-2-row\");\r\n\r\n        this.researchStoneAgeButton = $(\"#tech-stone-age-button\");\r\n        this.techStoneAgeElement = $(\"#tech-stone-age-row\");\r\n\r\n        this.researchArchitecture3Button = $(\"#tech-architecture-3-button\");\r\n        this.techArchitecture3Element = $(\"#tech-architecture-3-row\");\r\n\r\n        this.researchMusicButton = $(\"#tech-music-button\");\r\n        this.techMusicElement = $(\"#tech-music-row\");\r\n\r\n        this.researchSportButton = $(\"#tech-sport-button\");\r\n        this.techSportElement = $(\"#tech-sport-row\");\r\n\r\n        this.researchToolButton = $(\"#tech-tools-button\");\r\n        this.techToolElement = $(\"#tech-tools-row\");\r\n\r\n        this.researchWeaponButton = $(\"#tech-ancient-weapon-button\");\r\n        this.techAncientWeaponElement = $(\"#tech-weapon-row\");\r\n\r\n        this.researchHoeButton = $(\"#tech-hoe-button\");\r\n        this.techHoeElement = $(\"#tech-hoe-row\");\r\n\r\n        this.researchAxeButton = $(\"#tech-axe-button\");\r\n        this.techAxeElement = $(\"#tech-axe-row\");\r\n\r\n        this.researchPickaxeButton = $(\"#tech-pickaxe-button\");\r\n        this.techPickaxeElement = $(\"#tech-pickaxe-row\");\r\n\r\n        this.research2sideScrollButton = $(\"#tech-2-side-scroll-button\");\r\n        this.tech2sideScrollElement = $(\"#tech-2-side-scroll-row\");\r\n\r\n        this.researchArchitecture4Button = $(\"#tech-architecture-4-button\");\r\n        this.techArchitecture4Element = $(\"#tech-architecture-4-row\");\r\n\r\n        this.techBronzeAgeElement = $(\"#tech-bronze-age-row\");\r\n        this.researchBronzeAgeButton = $(\"#tech-bronze-age-button\");\r\n    }\r\n\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.configManager = this.gameManager.configManager;\r\n    }\r\n\r\n    static reloadSite() {\r\n        document.location.reload(true);\r\n    }\r\n\r\n    showElement(ar) {\r\n        ar.forEach((item) => item.show(\"slow\"));\r\n    }\r\n\r\n    hideElement(ar) {\r\n        ar.forEach((item) => item.hide(\"slow\"));\r\n    }\r\n\r\n    toggleElement(firstElementToShow, otherElementArToShowNew) {\r\n        firstElementToShow.toggle(\"slow\", () => {\r\n            if (otherElementArToShowNew) {\r\n                otherElementArToShowNew.forEach((item) => item.toggle(\"slow\"));\r\n            }\r\n        });\r\n    }\r\n\r\n    // TODO Involve this when resource is changed\r\n    checkProduction() {\r\n        this.changeColor(this.configManager.foodTotalProduction.quantity, this.foodProductionElement, this.addFarmerButton);\r\n        this.changeColor(this.configManager.woodTotalProduction.quantity, this.woodProductionElement);\r\n        this.changeColor(this.configManager.stoneTotalProduction.quantity, this.stoneProductionElement);\r\n        this.changeColor(this.configManager.knowledgeTotalProduction.quantity, this.knowledgeProductionElement);\r\n        this.changeColor(this.configManager.lazybones.quantity, this.curLazybonesElement);\r\n    }\r\n\r\n    checkOverpopulated() {\r\n        this.changeColor(this.configManager.populationStorage.quantity - this.configManager.currentPopulation.quantity - 1, this.maxPopulationElement);\r\n    }\r\n\r\n    changeColor(checkQuantity, target, button) {\r\n        if (checkQuantity > 0) {\r\n            target.css({\"background-color\": \"#28a745\", \"border-color\": \"#28a745\", \"color\": \"white\"});\r\n            if (!!button) {\r\n                button.css({\"background-color\": \"#28a745\", \"border-color\": \"#28a745\", \"color\": \"white\"});\r\n            }\r\n        } else if (checkQuantity === 0) {\r\n            target.css({\"background-color\": \"\", \"color\": \"white\"});\r\n        } else {\r\n            target.css({\"background-color\": \"red\", \"color\": \"white\"});\r\n            if (!!button) {\r\n                button.css({\"background-color\": \"green\", \"border-color\": \"red\"});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (PageManager);\n\n//# sourceURL=webpack:///./src/pageManager.js?");

/***/ }),

/***/ "./src/scienceManager.js":
/*!*******************************!*\
  !*** ./src/scienceManager.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n * Manage researches\r\n */\r\nclass ScienceManager {\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n\r\n        this.configManager = this.gameManager.configManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n\r\n        this.researchMap = new Map([\r\n            [\"changes\", new ChangesResearch(this.configManager, this.pageManager, this.eventManager)],\r\n            [\"agriculture\", new AgricultureResearch(\r\n                new Research(this.configManager.agricultureCost, this.pageManager.techAgricultureElement, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"architecture\", new Research(this.configManager.architectureCost, this.pageManager.techArchitectureElement, [this.pageManager.buildHutRow],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n            [\"funeral\", new Research(this.configManager.funeralCost, this.pageManager.techFuneralElement, [this.pageManager.buildScrollRow, this.pageManager.buildGraveRow,\r\n                this.pageManager.emptyRowBeforePopulationBuilding, this.pageManager.techChanges2Element], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"changes2\", new Research(this.configManager.changes2Cost, this.pageManager.techChanges2Element, [this.pageManager.techAgriculture2Element,\r\n                this.pageManager.techArchitecture2Element, this.pageManager.techLeadershipElement, this.pageManager.techStoneAgeElement], this.configManager, this.pageManager,\r\n                this.eventManager)],\r\n            [\"leadership\", new Research(this.configManager.leadershipCost, this.pageManager.techLeadershipElement, [this.pageManager.emptyRowBeforeJobLeader, this.pageManager.leaderRow],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n            [\"agriculture2\", new Agriculture2Research(\r\n                new Research(this.configManager.agriculture2Cost, this.pageManager.techAgriculture2Element, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"architecture2\", new Research(this.configManager.architecture2Cost, this.pageManager.techArchitecture2Element, [this.pageManager.buildPitRow],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n            [\"stone age\", new Research(this.configManager.stoneAgeCost, this.pageManager.techStoneAgeElement, [this.pageManager.buildGranaryRow, this.pageManager.techArchitecture3Element,\r\n                this.pageManager.techMusicElement, this.pageManager.techSportElement, this.pageManager.techToolElement], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"architecture3\", new Research(this.configManager.architecture3Cost, this.pageManager.techArchitecture3Element, [this.pageManager.buildDolmenRow],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n            [\"music\", new Research(this.configManager.musicCost, this.pageManager.techMusicElement, [this.pageManager.buildMusicClubRow], this.configManager,\r\n                this.pageManager, this.eventManager)],\r\n            [\"sport\", new Research(this.configManager.sportCost, this.pageManager.techSportElement, [this.pageManager.emptyRowBeforeJobInClubElement,\r\n                this.pageManager.emptyRowBeforeBuildEfficiency, this.pageManager.buildYogaClubRow], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"tool\", new Research(this.configManager.toolCost, this.pageManager.techToolElement, [this.pageManager.techAxeElement, this.pageManager.techPickaxeElement,\r\n                this.pageManager.techHoeElement, this.pageManager.techAncientWeaponElement, this.pageManager.techArchitecture4Element], this.configManager, this.pageManager,\r\n                this.eventManager)],\r\n            [\"weapon\", new Research(this.configManager.ancientWeaponCost, this.pageManager.techAncientWeaponElement, [this.pageManager.emptyRowbeforeBuildWar,\r\n                this.pageManager.buildBarrackRow, this.pageManager.tech2sideScrollElement], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"hoe\", new HoeResearch(\r\n                new Research(this.configManager.hoeCost, this.pageManager.techHoeElement, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"axe\", new AxeResearch(\r\n                new Research(this.configManager.axeCost, this.pageManager.techAxeElement, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"pickaxe\", new PickAxeResearch(\r\n                new Research(this.configManager.pickaxeCost, this.pageManager.techPickaxeElement, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"2 side scroll\", new TwoSideScrollResearch(\r\n                new Research(this.configManager.bothSideScrollCost, this.pageManager.tech2sideScrollElement, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"architecture4\", new Research(this.configManager.architecture4Cost, this.pageManager.techArchitecture4Element, [this.pageManager.buildPalaceRow, this.pageManager.techBronzeAgeElement],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n        ]);\r\n    }\r\n\r\n    research(name) {\r\n        this.researchMap.get(name).conductResearch();\r\n    }\r\n}\r\n\r\n/**\r\n * For 1st research, it's separate due to specific resources to conduct the research.\r\n */\r\nclass ChangesResearch {\r\n    constructor(configManager, pageManager, eventManager) {\r\n        this.woodPrice = 10;\r\n        this.stonePrice = 10;\r\n\r\n        this.configManager = configManager;\r\n        this.pageManager = pageManager;\r\n        this.eventManager = eventManager;\r\n    }\r\n\r\n    conductResearch() {\r\n        return this.tryToResearch();\r\n    }\r\n\r\n    tryToResearch() {\r\n        let result = true;\r\n\r\n        if (this.configManager.wood.quantity >= this.woodPrice && this.configManager.stone.quantity >= this.stonePrice) {\r\n            this.configManager.wood.changeQuantity(-this.woodPrice);\r\n            this.configManager.stone.changeQuantity(-this.stonePrice);\r\n\r\n            this.eventManager.addAchievement(\"First Research\");\r\n\r\n            this.pageManager.toggleElement(this.pageManager.techChangesElement, [this.pageManager.emptyRowBeforeKnowledge, this.pageManager.knowledgeRow,\r\n                this.pageManager.emptyRowBeforeJobScientist, this.pageManager.jobScientistRow, this.pageManager.emptyRowBeforeBuildKnowlegde, this.pageManager.buildCampfireRow,\r\n                this.pageManager.techAgricultureElement, this.pageManager.techFuneralElement, this.pageManager.techArchitectureElement]);\r\n        } else {\r\n            this.eventManager.addEvent(\"more resources\");\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Class base research\r\n */\r\nclass Research {\r\n    constructor(price, elementToHide, elementToShowAr, configManager, pageManager, eventManager) {\r\n        this.price = price;\r\n        this.elementToHide = elementToHide;\r\n        this.elementToShowAr = elementToShowAr;\r\n\r\n        this.configManager = configManager;\r\n        this.pageManager = pageManager;\r\n        this.eventManager = eventManager;\r\n    }\r\n\r\n    conductResearch() {\r\n        return this.tryToResearch();\r\n    }\r\n\r\n    tryToResearch() {\r\n        let result = true;\r\n\r\n        if (this.configManager.knowledge.quantity >= this.price) {\r\n            this.configManager.knowledge.changeQuantity(-this.price);\r\n            if (this.elementToHide && this.elementToShowAr) {\r\n                this.pageManager.toggleElement(this.elementToHide, this.elementToShowAr);\r\n            }\r\n        } else {\r\n            this.eventManager.addEvent(\"more knowledge\");\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Example of \"decorator\" pattern\r\n */\r\nclass ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        this.research = research;\r\n    }\r\n\r\n    conductResearch() {\r\n        let result = this.research.conductResearch();\r\n        if (result) {\r\n            this.extraLogic();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    extraLogic() {\r\n    }\r\n}\r\n\r\n/**\r\n * Example of \"template method\" pattern\r\n */\r\nclass AgricultureResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.changeProduction(\"food\", true);\r\n    }\r\n}\r\n\r\nclass Agriculture2Research extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.changeProduction(\"food\", true);\r\n        this.research.eventManager.addAchievement(\"More Food\");\r\n    }\r\n}\r\n\r\nclass HoeResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.foodIncreaseStep = 0.1;\r\n        this.research.configManager.changeProduction(\"food\", true);\r\n        this.research.configManager.productivity.changeQuantity(6.25);\r\n    }\r\n}\r\n\r\nclass AxeResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.changeProduction(\"wood\", true);\r\n        this.research.configManager.productivity.changeQuantity(6.25);\r\n    }\r\n}\r\n\r\nclass PickAxeResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.changeProduction(\"stone\", true);\r\n        this.research.configManager.productivity.changeQuantity(6.25);\r\n    }\r\n}\r\n\r\nclass TwoSideScrollResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.knowledgeStorage.changeQuantity(this.research.configManager.scroll.quantity * this.research.configManager.knowledgeInScroll.quantity);\r\n        this.research.configManager.knowledgeInScroll.changeQuantity(5);\r\n        this.research.configManager.gameManager.builderManager.buildingMap.get(\"scroll\").resourceToChangeAr[1][1] = this.research.configManager.knowledgeInScroll.quantity;\r\n        this.research.pageManager.buildScrollButton.text(\"2-side scroll\");\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ScienceManager);\n\n//# sourceURL=webpack:///./src/scienceManager.js?");

/***/ })

/******/ });